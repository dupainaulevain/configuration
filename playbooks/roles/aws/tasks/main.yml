---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://github.com/edx/configuration/wiki
# code style: https://github.com/edx/configuration/wiki/Ansible-Coding-Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
#
#
# Tasks for role aws
#
# Overview:
#
#
# Dependencies:
#
#
# Example play:
#
#

#
# Start dealing with Jumbo frames issue in mixed MTU deployements in AWS
#
- name: gather ec2 facts for use in other roles
  action: ec2_facts
  tags: 
    - deploy

- shell: >
    /sbin/ifconfig eth0 mtu 1500 up
  when: ansible_distribution in common_debian_variants

- name: check for eth0.cfg
  stat: path=/etc/network/interfaces.d/eth0.cfg
  register: eth0_cfg
  when: ansible_distribution in common_debian_variants

- lineinfile: >
    dest=/etc/network/interfaces.d/eth0.cfg
    regexp="^post-up /sbin/ifconfig eth0 mtu 1500"
    line="post-up /sbin/ifconfig eth0 mtu 1500"
    insertafter="^iface"
  when: ansible_distribution in common_debian_variants and eth0_cfg.stat.exists

#
# End dealing with Jumbo frames issue in mixed MTU deployements in AWS
#

- name: install system packages
  apt: >
    pkg={{','.join(aws_debian_pkgs)}}
    state=present
    update_cache=yes

- name: install aws python packages
  pip: >
    name="{{ item }}" state=present
    extra_args="-i {{ COMMON_PYPI_MIRROR_URL }}"
  with_items: aws_pip_pkgs

- name: create s3 log sync script
  template: >
    dest={{ aws_s3_sync_script }}
    src=send-logs-to-s3.j2 mode=0755 owner=root group=root
  when: COMMON_OBJECT_STORE_LOG_SYNC

- name: create symlink for s3 log sync script
  file: >
    state=link
    src={{ aws_s3_sync_script }}
    dest={{ COMMON_OBJECT_STORE_LOG_SYNC_SCRIPT }}
  when: COMMON_OBJECT_STORE_LOG_SYNC

- name: force logrotate on supervisor stop
  template: >
    src=etc/init/sync-on-stop.conf.j2
    dest=/etc/init/sync-on-stop.conf
    owner=root group=root mode=0644
  when: COMMON_OBJECT_STORE_LOG_SYNC

  # cron job runs the aws s3 sync script
  # this job will log its output to /var/log/aws
- name: cronjob for s3 log sync
  cron:
    name: "cronjob for s3 log sync"
    user: root
    minute: 0
    job: "{{ aws_s3_sync_script }} > /dev/null 2>&1"
    state: absent
  when: COMMON_OBJECT_STORE_LOG_SYNC

- name: update /etc/dhcp/dhclient.conf
  template: 
    src: etc/dhcp/dhclient.conf.j2 
    dest: /etc/dhcp/dhclient.conf
  when: COMMON_CUSTOM_DHCLIENT_CONFIG
