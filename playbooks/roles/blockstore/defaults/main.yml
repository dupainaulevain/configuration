---
#
# edX Configuration
#
# github:     https://github.com/edx/configuration
# wiki:       https://openedx.atlassian.net/wiki/display/OpenOPS
# code style: https://openedx.atlassian.net/wiki/display/OpenOPS/Ansible+Code+Conventions
# license:    https://github.com/edx/configuration/blob/master/LICENSE.TXT
#
##
# Defaults for role blockstore
#

BLOCKSTORE_GIT_IDENTITY: !!null

# depends upon Newrelic being enabled via COMMON_ENABLE_NEWRELIC
# and a key being provided via NEWRELIC_LICENSE_KEY
BLOCKSTORE_NEWRELIC_APPNAME: "{{ COMMON_ENVIRONMENT }}-{{ COMMON_DEPLOYMENT }}-{{ blockstore_service_name }}"
BLOCKSTORE_PIP_EXTRA_ARGS: "-i {{ COMMON_PYPI_MIRROR_URL }}"
BLOCKSTORE_NGINX_PORT: '1{{ blockstore_gunicorn_port }}'
BLOCKSTORE_SSL_NGINX_PORT: '4{{ blockstore_gunicorn_port }}'
BLOCKSTORE_SERVICE_HOSTNAME: '~^((stage|prod)-)?blockstore.*'

BLOCKSTORE_MEMCACHE:
  - localhost:11211

BLOCKSTORE_DATABASE_NAME: blockstore
BLOCKSTORE_DATABASE_USER: blockstore001
BLOCKSTORE_DATABASE_PASSWORD: password
BLOCKSTORE_DATABASE_HOST: localhost

BLOCKSTORE_VERSION: "master"
BLOCKSTORE_GIT_PATH: "open-craft"
BLOCKSTORE_DJANGO_SETTINGS_MODULE: "blockstore.settings.production"

BLOCKSTORE_SESSION_EXPIRE_AT_BROWSER_CLOSE: false
BLOCKSTORE_SECRET_KEY: 'Your secret key here'
BLOCKSTORE_LANGUAGE_CODE: 'en'
BLOCKSTORE_LANGUAGE_COOKIE_NAME: 'openedx-language-preference'
BLOCKSTORE_EDX_API_KEY: 'PUT_YOUR_API_KEY_HERE'  # This should match the value set for edxapp
BLOCKSTORE_BLOCKSTORE_URL_ROOT: 'http://localhost:{{ blockstore_gunicorn_port }}'
BLOCKSTORE_LOGOUT_URL: '{{ BLOCKSTORE_BLOCKSTORE_URL_ROOT }}/logout/'
BLOCKSTORE_LMS_URL_ROOT: 'http://127.0.0.1:8000'
BLOCKSTORE_JWT_ALGORITHM: 'HS256'
BLOCKSTORE_JWT_VERIFY_EXPIRATION: true
BLOCKSTORE_JWT_DECODE_HANDLER: 'blockstore.extensions.api.handlers.jwt_decode_handler'
BLOCKSTORE_JWT_ISSUERS:
  - '{{ COMMON_JWT_ISSUER }}'
  - 'blockstore_worker'  # Must match the value of JWT_ISSUER configured for the blockstore worker.
BLOCKSTORE_JWT_LEEWAY: 1
# NOTE: We have an array of keys to allow for support of multiple when, for example,
# we change keys. This will ensure we continue to operate with JWTs issued signed with the old key
# while migrating to the new key.
BLOCKSTORE_JWT_SECRET_KEYS:
  - '{{ COMMON_JWT_SECRET_KEY }}'

# Used to automatically configure OAuth2 Client
BLOCKSTORE_SOCIAL_AUTH_EDX_OIDC_KEY: 'blockstore-key'
BLOCKSTORE_SOCIAL_AUTH_EDX_OIDC_SECRET: 'blockstore-secret'
BLOCKSTORE_SOCIAL_AUTH_REDIRECT_IS_HTTPS: false

# Settings for affiliate cookie tracking
BLOCKSTORE_AFFILIATE_COOKIE_NAME: '{{ EDXAPP_AFFILIATE_COOKIE_NAME | default("dev_affiliate_id") }}'


blockstore_service_config_overrides:
  LANGUAGE_COOKIE_NAME: '{{ BLOCKSTORE_LANGUAGE_COOKIE_NAME }}'
  EDX_API_KEY: '{{ BLOCKSTORE_EDX_API_KEY }}'

  JWT_AUTH:
    JWT_SECRET_KEY: '{{ COMMON_JWT_SECRET_KEY }}'
    JWT_ALGORITHM: '{{ BLOCKSTORE_JWT_ALGORITHM }}'
    JWT_VERIFY_EXPIRATION: '{{ BLOCKSTORE_JWT_VERIFY_EXPIRATION }}'
    JWT_LEEWAY: '{{ BLOCKSTORE_JWT_LEEWAY }}'
    JWT_DECODE_HANDLER: '{{ BLOCKSTORE_JWT_DECODE_HANDLER }}'
    JWT_ISSUERS: '{{ BLOCKSTORE_JWT_ISSUERS }}'
    JWT_SECRET_KEYS: '{{ BLOCKSTORE_JWT_SECRET_KEYS }}'

  AFFILIATE_COOKIE_KEY: '{{ BLOCKSTORE_AFFILIATE_COOKIE_NAME }}'

  CSRF_COOKIE_SECURE: "{{ BLOCKSTORE_CSRF_COOKIE_SECURE }}"
  SESSION_COOKIE_SECURE: '{{ BLOCKSTORE_SESSION_COOKIE_SECURE}}'

BLOCKSTORE_GUNICORN_WORKER_CLASS: "gevent"
BLOCKSTORE_GUNICORN_EXTRA: ""

BLOCKSTORE_CSRF_COOKIE_SECURE: false

BLOCKSTORE_SESSION_COOKIE_SECURE: true

#
# vars are namespace with the module name.
#
blockstore_service_name: "blockstore"
blockstore_user: "{{ blockstore_service_name }}"
blockstore_home: "{{ COMMON_APP_DIR }}/{{ blockstore_service_name }}"
blockstore_code_dir: "{{ blockstore_home }}/{{ blockstore_service_name }}"
blockstore_venv_dir: "{{ blockstore_home }}/venvs/{{ blockstore_service_name }}"

blockstore_gunicorn_port: "8180"

blockstore_environment:
  BLOCKSTORE_CFG: "{{ COMMON_CFG_DIR }}/{{ blockstore_service_name }}.yml"

blockstore_create_demo_data: false

# Antivirus
BLOCKSTORE_ENABLE_ANTIVIRUS: false
BLOCKSTORE_ANTIVIRUS_SCAN_DIRECTORY: "{{ blockstore_code_dir }}"

BLOCKSTORE_ENABLE_DJANGO_ADMIN_RESTRICTION: false

#
# OS packages
#

blockstore_debian_pkgs:
  - libmysqlclient-dev
  - libjpeg-dev
  - libssl-dev
  - libffi-dev

blockstore_redhat_pkgs: []

blockstore_post_migrate_commands:
  - command: './manage.py loaddata tests/fixtures/multiple_pathways.json'
    when: '{{ blockstore_create_demo_data }}'
