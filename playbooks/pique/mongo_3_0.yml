---
# Manages the MongoDB cluster.

# First activate up the configuration virtualenv:
#   source ~/venv-ansible/bin/activate
# (If you don't have that yet, run 'virtualenv ~/venv-ansible' then that command, then 'pip install -r ~/configuration/requirements.txt')
# Run with a command like this,
#   ansible-playbook -i 10.1.1.1,10.2.2.2,10.3.3.3 -e@../../../vars.yml -u ubuntu services.yml

# To set up a new mongo cluster, make sure you've configured MONGO_RS_CONFIG
# as used by mongo_replica_set in the mongo_3_0 role.
#
# If you are initializing a cluster, your command might look like:
# ansible-playbook -i 10.1.1.1,10.2.2.2,10.3.3.3 -e@../../../vars.yml -u ubuntu mongo_3_0.yml
# If you just want to deploy an updated replica set config, you can run
# ansible-playbook -i any-cluster-ip -e@../../../vars.yml -u ubuntu --tags configure_replica_set mongo_3_0.yml
#
# ADDING A NEW CLUSTER MEMBER
# If you are adding a member to a cluster, you must be sure that the new machine is not first in your inventory
# ansible-playbook -i 10.1.1.1,10.2.2.2,new-machine-ip -e@../../../vars.yml -u ubuntu mongo_3_0.yml

- name: Deploy MongoDB
  hosts: all
  become: True
  gather_facts: True
  roles:
    - aws
    - mongo_3_0
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC
