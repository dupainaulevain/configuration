---

# Example sandbox configuration
# for single server community
# installs

- name: Bootstrap instance(s)
  hosts: all
  gather_facts: no
  become: True
  roles:
    - python

- name: Configure instance(s)
  hosts: all
  become: True
  gather_facts: True
  vars:
    migrate_db: "yes"
    EDXAPP_LMS_NGINX_PORT: '80'
    edx_platform_version: 'master'
    # Set to false if deployed behind another proxy/load balancer.
    NGINX_SET_X_FORWARDED_HEADERS: True
    # These should stay false for the public AMI
    COMMON_ENABLE_DATADOG: False
    SANDBOX_ENABLE_ECOMMERCE: False
    COMMON_ENABLE_SPLUNKFORWARDER: False
    oraclejdk_version: "8u181"
    oraclejdk_base: "jdk1.8.0_181"
    oraclejdk_build: "b13"
    oraclejdk_url: "http://download.oracle.com/otn-pub/java/jdk/8u181-b13/96a7b8442fe848ef90c96a2fad6ed6d1/jdk-8u181-linux-x64.tar.gz"
  roles:
    - role: swapfile
      SWAPFILE_SIZE: 2GB
    - role: nginx
      nginx_sites:
      - certs
      - cms
      - lms
      - forum
      - xqueue
      nginx_default_sites:
      - lms
    - role: nginx
      nginx_sites:
      - ecommerce
      when: SANDBOX_ENABLE_ECOMMERCE
    - role: edxlocal
      when: EDXAPP_MYSQL_HOST == 'localhost'
    - role: memcache
      when: "'localhost' in ' '.join(EDXAPP_MEMCACHE)"
    - role: mongo_3_0
      MONGODB_SERVICE_TEMPLATE: "mongodb.service"
      when: "'localhost' in EDXAPP_MONGO_HOSTS"
    - role: rabbitmq
      rabbitmq_ip: 127.0.0.1
    - role: edxapp
      celery_worker: True
    - edxapp
    - role: aws
      when: COMMON_ENABLE_AWS_INTEGRATION
    - role: openstack
      when: COMMON_ENABLE_OPENSTACK_INTEGRATION
    - role: ecommerce
      when: SANDBOX_ENABLE_ECOMMERCE
    - role: ecomworker
      ECOMMERCE_WORKER_BROKER_HOST: 127.0.0.1
      when: SANDBOX_ENABLE_ECOMMERCE
    # not ready yet: - edx_notes_api
    - demo
    - oauth_client_setup
    - { role: "forum", forum_services: [] }
    - role: xqueue
      update_users: True
    - certs
    - edx_ansible
    - role: datadog
      when: COMMON_ENABLE_DATADOG
    - role: splunkforwarder
      when: COMMON_ENABLE_SPLUNKFORWARDER
    - role: newrelic
      when: COMMON_ENABLE_NEWRELIC
    - role: postfix_queue
      when: POSTFIX_QUEUE_EXTERNAL_SMTP_HOST != ''
